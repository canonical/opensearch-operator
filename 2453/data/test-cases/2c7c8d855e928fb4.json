{"uid":"2c7c8d855e928fb4","name":"test_replication_across_members","fullName":"tests.integration.ha.test_ha#test_replication_across_members","historyId":"cb2c506f33ba11a1cf9749539e28f0e4","time":{"start":1723170506597,"stop":1723170562034,"duration":55437},"description":"Check consistency, ie write to node, read data from remaining nodes.\n\n    1. Create index with replica shards equal to number of nodes - 1.\n    2. Index data.\n    3. Query data from all the nodes (all the nodes should contain a copy of the data).\n    ","descriptionHtml":"<p>Check consistency, ie write to node, read data from remaining nodes.</p>\n<pre><code>1. Create index with replica shards equal to number of nodes - 1.\n2. Index data.\n3. Query data from all the nodes (all the nodes should contain a copy of the data).\n</code></pre>\n","status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"event_loop","time":{"start":1723169740038,"stop":1723169740038,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"tmp_path_factory","time":{"start":1723169740039,"stop":1723169740039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"ops_test","time":{"start":1723169740039,"stop":1723169740320,"duration":281},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"abort_on_fail","time":{"start":1723170498104,"stop":1723170498105,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"c_writes","time":{"start":1723170498105,"stop":1723170498728,"duration":623},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"c_writes_runner","time":{"start":1723170498729,"stop":1723170506593,"duration":7864},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Check consistency, ie write to node, read data from remaining nodes.\n\n    1. Create index with replica shards equal to number of nodes - 1.\n    2. Index data.\n    3. Query data from all the nodes (all the nodes should contain a copy of the data).\n    ","status":"passed","steps":[],"attachments":[{"uid":"fa5d5bf1eadf20b","name":"log","source":"fa5d5bf1eadf20b.txt","type":"text/plain","size":1223}],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"c_writes_runner::finalizer","time":{"start":1723170562038,"stop":1723170567580,"duration":5542},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"abort_on_fail::0","time":{"start":1723170567584,"stop":1723170567584,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"ops_test::finalizer","time":{"start":1723172053667,"stop":1723172054152,"duration":485},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::2","time":{"start":1723172054153,"stop":1723172054155,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_close_event_loop","time":{"start":1723172054155,"stop":1723172054155,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"event_loop::_provide_clean_event_loop","time":{"start":1723172054155,"stop":1723172054156,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"abort_on_fail"},{"name":"tag","value":"group(1)"},{"name":"tag","value":"runner(['self-hosted', 'linux', 'X64', 'jammy', 'large'])"},{"name":"tag","value":"asyncio"},{"name":"parentSuite","value":"tests.integration.ha"},{"name":"suite","value":"test_ha"},{"name":"host","value":"large-442-8405f87aa6eea65cdd06a8ce"},{"name":"thread","value":"9944-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.integration.ha.test_ha"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"34b84da3ffd30f48","status":"unknown","time":{}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":1,"passed":13,"unknown":0,"total":14},"items":[{"uid":"b373318e14b7533c","reportUrl":"../2440//#testresult/b373318e14b7533c","status":"passed","time":{"start":1723086495450,"stop":1723086551500,"duration":56050}},{"uid":"69369473d317dfde","reportUrl":"../2428//#testresult/69369473d317dfde","status":"passed","time":{"start":1722997045633,"stop":1722997097614,"duration":51981}},{"uid":"3bb8fb56fa89e1d3","reportUrl":"../2422//#testresult/3bb8fb56fa89e1d3","status":"passed","time":{"start":1722909190452,"stop":1722909249342,"duration":58890}},{"uid":"f45dbefb3421d90f","reportUrl":"../2403//#testresult/f45dbefb3421d90f","status":"passed","time":{"start":1722824921480,"stop":1722824987074,"duration":65594}},{"uid":"79526ea097e882b","reportUrl":"../2401//#testresult/79526ea097e882b","status":"passed","time":{"start":1722651432735,"stop":1722651497691,"duration":64956}},{"uid":"7483c7a1078c438c","reportUrl":"../2395//#testresult/7483c7a1078c438c","status":"skipped","statusDetails":"XFAIL reason: aborted\n\n_pytest.outcomes.XFailed: aborted","time":{"start":1722566286490,"stop":1722566286490,"duration":0}},{"uid":"c64e7ec1e58c37fe","reportUrl":"../2388//#testresult/c64e7ec1e58c37fe","status":"passed","time":{"start":1722480383001,"stop":1722480456675,"duration":73674}},{"uid":"5aee93873c310265","reportUrl":"../2382//#testresult/5aee93873c310265","status":"passed","time":{"start":1722390869167,"stop":1722390957775,"duration":88608}},{"uid":"ebc547c1f6993a5b","reportUrl":"../2376//#testresult/ebc547c1f6993a5b","status":"passed","time":{"start":1722304101049,"stop":1722304166245,"duration":65196}},{"uid":"1859ef602587354a","reportUrl":"../2371//#testresult/1859ef602587354a","status":"passed","time":{"start":1722217618337,"stop":1722217685802,"duration":67465}},{"uid":"94d7d59423ce4c13","reportUrl":"../2368//#testresult/94d7d59423ce4c13","status":"passed","time":{"start":1722132098969,"stop":1722132168211,"duration":69242}},{"uid":"723f4254a2b21a32","reportUrl":"../2360//#testresult/723f4254a2b21a32","status":"passed","time":{"start":1722044729637,"stop":1722044798428,"duration":68791}},{"uid":"67cf1c618e74288","reportUrl":"../2346//#testresult/67cf1c618e74288","status":"passed","time":{"start":1721959036553,"stop":1721959090012,"duration":53459}}]},"tags":["runner(['self-hosted', 'linux', 'X64', 'jammy', 'large'])","asyncio","abort_on_fail","group(1)"]},"source":"2c7c8d855e928fb4.json","parameterValues":[]}