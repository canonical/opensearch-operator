
# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
no_package = True
env_list = lint, unit

[vars]
src_path = {tox_root}/src
tests_path = {tox_root}/tests
lib_path = {tox_root}/lib/charms/opensearch
all_path = {[vars]src_path} {[vars]tests_path} {[vars]lib_path}

[testenv]
set_env =
    PYTHONPATH = {[vars]src_path}:{tox_root}/lib
    PY_COLORS=1
allowlist_externals =
    poetry

[testenv:format]
description = Apply coding style standards to code
commands_pre =
    poetry install --only format
commands =
    poetry lock --no-update
    poetry run isort {[vars]all_path}
    poetry run black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
allowlist_externals =
    {[testenv]allowlist_externals}
    find
commands_pre =
    poetry install --only lint
commands =
    poetry check --lock
    poetry run codespell {[vars]all_path}
    # pflake8 wrapper supports config from pyproject.toml
    # exclude the lib folder, that is copied from lib/charms/data_platform_libs/
    poetry run pflake8 --exclude '.git,__pycache__,.tox,build,dist,*.egg_info,venv,tests/integration/relations/opensearch_provider/application-charm/lib/charms/data_platform_libs/' {[vars]all_path}
    poetry run isort --check-only --diff {[vars]all_path}
    poetry run black --check --diff {[vars]all_path}
    find {[vars]all_path} -type f \( -name "*.sh" -o -name "*.bash" \) -exec poetry run shellcheck --color=always \{\} +

[testenv:unit]
description = Run unit tests
set_env =
    {[testenv]set_env}
commands_pre =
    poetry install --only main,charm-libs,unit
commands =
    poetry run coverage run --source={[vars]src_path},{[vars]lib_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tests_path}/unit
    poetry run coverage report
    poetry run coverage xml

[testenv:integration]
description = Run integration tests
pass_env =
    CI
    GITHUB_OUTPUT
    S3_INTEGRATOR_CHARMPATH
    SECRETS_FROM_GITHUB
set_env =
    {[testenv]set_env}
    # Workaround for https://github.com/python-poetry/poetry/issues/6958
    POETRY_INSTALLER_PARALLEL = false
allowlist_externals =
    {[testenv]allowlist_externals}
    # Set the testing host before starting the lxd cloud
    sudo
    sysctl

commands_pre =
    poetry install --only main,charm-libs,integration

    # Set the testing host before starting the lxd cloud
    sudo sysctl -w vm.max_map_count=262144 vm.swappiness=0 net.ipv4.tcp_retries2=5
commands =
    poetry run pytest -v --tb native --log-cli-level=INFO -s --ignore={[vars]tests_path}/unit/ {posargs}
