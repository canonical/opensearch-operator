# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
name: Pre-integration checks

on:
  workflow_call:
    inputs:
      libjuju-version-specifier:
        description: |
            python-libjuju version specifier (e.g. ">=1.3")
            https://packaging.python.org/en/latest/glossary/#term-Version-Specifier
        required: false
        type: string

jobs:
  lint:
    name: Lint
    runs-on: [self-hosted, linux, X64, large, jammy]
    timeout-minutes: 5
    steps:
      - name: Set up aproxy
        run: |
          sudo snap install aproxy --edge || true
          sudo snap set aproxy proxy=squid.internal:3128 || true
          sudo nft -f - << EOF
          define default-ip = $(ip route get $(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+') | grep -oP 'src \K\S+')
          define private-ips = { 10.0.0.0/8, 127.0.0.1/8, 172.16.0.0/12, 192.168.0.0/16 }
          table ip aproxy
          flush table ip aproxy
          table ip aproxy {
                chain prerouting {
                        type nat hook prerouting priority dstnat; policy accept;
                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }
                chain output {
                        type nat hook output priority -100; policy accept;
                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }
          }
          EOF
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install tox
        # TODO: Consider replacing with custom image on self-hosted runner OR pinning version
        run: python3 -m pip install tox
      - name: Run linters
        run: tox run -e lint

  unit-test:
    name: Unit tests
    runs-on: [self-hosted, linux, X64, large, jammy]
    timeout-minutes: 5
    needs:
      - lint
    steps:
      - name: Set up aproxy
        run: |
          sudo snap install aproxy --edge || true
          sudo snap set aproxy proxy=squid.internal:3128 || true
          sudo nft -f - << EOF
          define default-ip = $(ip route get $(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+') | grep -oP 'src \K\S+')
          define private-ips = { 10.0.0.0/8, 127.0.0.1/8, 172.16.0.0/12, 192.168.0.0/16 }
          table ip aproxy
          flush table ip aproxy
          table ip aproxy {
                chain prerouting {
                        type nat hook prerouting priority dstnat; policy accept;
                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }
                chain output {
                        type nat hook output priority -100; policy accept;
                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }
          }
          EOF
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install tox
        # TODO: Consider replacing with custom image on self-hosted runner OR pinning version
        run: python3 -m pip install tox
      - name: Run tests
        run: tox run -e unit
        env:
          LIBJUJU_VERSION_SPECIFIER: ${{ inputs.libjuju-version-specifier }}

  lib-check:
    name: Check libraries
    runs-on: [self-hosted, linux, X64, large, jammy]
    timeout-minutes: 5
    steps:
      - name: Set up aproxy
        run: |
          sudo snap install aproxy --edge
          sudo snap set aproxy proxy=squid.internal:3128
          sudo nft -f - << EOF
          define default-ip = $(ip route get $(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+') | grep -oP 'src \K\S+')
          define private-ips = { 10.0.0.0/8, 127.0.0.1/8, 172.16.0.0/12, 192.168.0.0/16 }
          table ip aproxy
          flush table ip aproxy
          table ip aproxy {
                chain prerouting {
                        type nat hook prerouting priority dstnat; policy accept;
                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }
                chain output {
                        type nat hook output priority -100; policy accept;
                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
                }
          }
          EOF
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Check libs
        uses: canonical/charming-actions/check-libraries@2.1.1
        with:
          credentials: "${{ secrets.CHARMHUB_TOKEN }}" # FIXME: current token will expire in 2023-07-04
          github-token: "${{ secrets.GITHUB_TOKEN }}"
