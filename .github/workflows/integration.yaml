# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
name: Integration Tests

on:
  workflow_call:
    inputs:
      juju-snap-channel:
        description: Snap channel for Juju CLI
        default: 3.1/stable
        type: string
      libjuju-version-specifier:
        default: ==3.1.0.1
        type: string
      artifact-name:
        description: Location for built charm file.
        type: string

jobs:
  integration-test:
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - charm-integration
          # commented out so I don't take up every runner
        #   - tls-integration
        #   - client-integration
        #   - ha-integration
        # runner: ["ubuntu-22.04"]
        # include:
        #   - tox-environments: h-scaling-integration
        #     runner: "Ubuntu_4C_16G"
    name: ${{ matrix.tox-environments }}
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 120
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Juju environment
        # Runs on juju 3 by default
        # TODO: Replace with custom image on self-hosted runner
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          juju-channel: ${{ inputs.juju-snap-channel }}

      - name: Download packed charm(s)
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}

      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi

      - name: Run integration tests
        run: |
          # Set kernel params
          sudo sysctl -w vm.max_map_count=262144 vm.swappiness=0 net.ipv4.tcp_retries2=5
          echo ${{ inputs.libjuju-version-specifier }}
          echo ${{ inputs.juju-snap-channel }}
          echo ${{ inputs.artifact-name}}
          echo ${{ matrix.tox-environments }}
          tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}'
        env:
          CI_PACKED_CHARMS: ${{ inputs.artifact-name }}
          LIBJUJU_VERSION_SPECIFIER: ${{ inputs.libjuju-version-specifier }}
