# Copyright 2023 Canonical Ltd.
# See LICENSE file for licensing details.
on:
  workflow_call:
    inputs:
      juju-snap-channel:
        description: Snap channel for Juju CLI
        default: 3.1/stable
        type: string
      libjuju-version-specifier:
        description: |
            python-libjuju version specifier (e.g. ">=1.3")
            https://packaging.python.org/en/latest/glossary/#term-Version-Specifier
        required: false
        type: string
      no-proxy:
        default: "10.0.0.0/8,192.168.0.0/16,172.16.0.0/12,194.169.254.133,.pc1.canonical.com,.openstack.partnercloud1.lan,127.0.0.1,localhost"
        required: false
        type: string
      http-proxy:
        default: "http://squid.internal:3128"
        required: false
        type: string

jobs:
  build:
    name: Build charms
    uses: canonical/data-platform-workflows/.github/workflows/build_charms_with_cache.yaml@add-aproxy-snap
    with:
      charmcraft-snap-revision: 1349  # version 2.3.0
    permissions:
      actions: write  # Needed to manage GitHub Actions cache


  integration-test:
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        tox-environments:
          - charm-integration
          - tls-integration
          - client-integration
          - ha-base-integration
          - ha-networking-integration
          - ha-multi-clusters-integration
          - large-deployments-integration
          - plugins-integration
        runner: [self-hosted, linux, X64, xlarge, jammy]
        include:
          - tox-environments: h-scaling-integration
            runner: [self-hosted, linux, X64, xlarge, jammy]
    name: ${{ matrix.tox-environments }}
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 360
    steps:
#      - name: Set up aproxy
#        run: |
#          sudo snap install aproxy --edge
#          sudo snap set aproxy proxy=squid.internal:3128
#          sudo nft -f - << EOF
#          define default-ip = $(ip route get $(ip route show 0.0.0.0/0 | grep -oP 'via \K\S+') | grep -oP 'src \K\S+')
#          define private-ips = { 10.0.0.0/8, 127.0.0.1/8, 172.16.0.0/12, 192.168.0.0/16 }
#          table ip aproxy
#          flush table ip aproxy
#          table ip aproxy {
#                chain prerouting {
#                        type nat hook prerouting priority dstnat; policy accept;
#                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
#                }
#                chain output {
#                        type nat hook output priority -100; policy accept;
#                        ip daddr != \$private-ips tcp dport { 80, 443 } counter dnat to \$default-ip:8443
#                }
#          }
#          EOF

      - name: Checkout
        uses: actions/checkout@v3

      - name: Upgrade LXD
        run: |
          sudo snap refresh lxd --channel=latest/stable

      - name: Setup Juju environment
        # Runs on juju 3 by default
        # TODO: Replace with custom image on self-hosted runner
        uses: charmed-kubernetes/actions-operator@main
        with:
          provider: lxd
          juju-channel: ${{ inputs.juju-snap-channel }}
          bootstrap-options: "--model-default juju-http-proxy=${{ inputs.http-proxy }} --model-default juju-https-proxy=${{ inputs.http-proxy }} --model-default juju-no-proxy=${{ inputs.no-proxy }} --model-default apt-http-proxy=${{ inputs.http-proxy }} --model-default apt-https-proxy=${{ inputs.http-proxy }} --model-default snap-http-proxy=${{ inputs.http-proxy }} --model-default snap-https-proxy=${{ inputs.http-proxy }}"

      - name: Download packed charm(s)
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact-name }}

      - name: Select tests
        id: select-tests
        run: |
          if [ "${{ github.event_name }}" == "schedule" ]
          then
            echo Running unstable and stable tests
            echo "mark_expression=" >> $GITHUB_OUTPUT
          else
            echo Skipping unstable tests
            echo "mark_expression=not unstable" >> $GITHUB_OUTPUT
          fi

      - name: Run integration tests
        run: |
          # free space in the runner
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/share/boost
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

          # Set kernel params for OpenSearch
          sudo sysctl -w vm.max_map_count=262144 vm.swappiness=0 net.ipv4.tcp_retries2=5
          # Set kernel params for testing
          sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 net.ipv6.conf.all.autoconf=0
          tox run -e ${{ matrix.tox-environments }} -- -m '${{ steps.select-tests.outputs.mark_expression }}'
        env:
          CI_PACKED_CHARMS: ${{ needs.build.outputs.charms }}
          LIBJUJU_VERSION_SPECIFIER: ${{ inputs.libjuju-version-specifier }}
